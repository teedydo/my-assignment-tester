package homepage;

import static org.junit.Assert.assertTrue;

import org.assertj.core.api.SoftAssertions;
import org.testng.ITestContext;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import org.testng.annotations.Listeners;
import PageFactory.MyPageFactory;
import utilities.AbstractTest;
import utilities.MyDateUtils;

@Listeners(utilities.runner.ListenerTest.class)
public class SearchCityAndVerifyCurrentDate extends AbstractTest{
	private MyPageFactory page;

	@BeforeClass
	public void accessToURL() {
		page = new MyPageFactory(this.driver);
	}

	// Data set for Data driven test case
	@DataProvider(name = "city")
	public Object[][] city() {
		return new Object [][] {
			{"Paris", false, "_ValidCity"}, 
			{"No city", true, "_InvalidCity"}
		};
	}

	@Test (dataProvider = "city")
	public void test01_SearchCityAndVerfiyCurrentDate(String cityName, boolean isDisplayedInC, String testName, ITestContext context) {
		context.setAttribute("testName", context.getAttribute("testMethodName") + "_" + cityName + "_" + testName);
		// Search for City in search text
		this.page.getHomepage().searchCity(cityName);

		// Select first option displayed
		this.page.getHomepage().selectResult(cityName);

		// Verify: City name displayed - Stop test case if navigated to incorrect city
		assertTrue("Verify: Navigated to City Details page - " + cityName, 
				this.page.getCityDetailsPage().isCityNameDisplayed(cityName));

		SoftAssertions softAssertions = new SoftAssertions();
		// Verify: Current date displayed correctly - Continues if current date incorrectly
		String currentDate = MyDateUtils.getCurrentDateWithFormat(this.page.getCityDetailsPage().DATE_FORMAT_IN_DETAILS_PAGE);
		softAssertions.assertThat(this.page.getCityDetailsPage().getCurrentDateDisplayed()).as
		("Verify: Current date is match current date for user local", 
				this.page.getCityDetailsPage().getCurrentDateDisplayed().equals(currentDate));

		// Verify: Temperature displayed by selected measurement - Continues if current date incorrectly
		this.page.getCityDetailsPage().selectCTemperatureMeasurements(isDisplayedInC);
		String currentTemp = this.page.getCityDetailsPage().getCurrentTemp();
		softAssertions.assertThat(currentTemp).as
		("Verify: Current temperature is displayed with celsius",
				this.page.getCityDetailsPage().verifyTextDisplayWithSelectedMeasurement(currentTemp, isDisplayedInC));
		
		// Assert all
		softAssertions.assertAll();
	}
}
